package ru.terentyev.itq_orders_service.utils;

import jakarta.annotation.PostConstruct;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;
import ru.terentyev.itq_orders_service.repositories.ProductRepository;

@Component
public class DatabaseInitializer {

    private final JdbcTemplate jdbcTemplate;
    private final ProductRepository productRepository;

    public DatabaseInitializer(JdbcTemplate jdbcTemplate, ProductRepository productRepository) {
        this.jdbcTemplate = jdbcTemplate;
        this.productRepository = productRepository;
    }

    @PostConstruct
    public void init() {
        createDbTables();
        fillProductTable();
    }

    private void createDbTables(){
        createOrdersTable();
        createOrderDetailsTable();
        createProductTable();
    }

    private void fillProductTable(){
        String sql = "INSERT INTO products (article, title, price) VALUES (?, ?, ?)" +
                " ON CONFLICT (article) DO NOTHING";
        jdbcTemplate.update(sql, 131, "Книга", 300);
        jdbcTemplate.update(sql, 43, "Обувь", 1000);
        jdbcTemplate.update(sql, 1157, "Одежда", 2000);
        jdbcTemplate.update(sql, 28371, "Гаджет", 10000);
        jdbcTemplate.update(sql, 5, "Хлеб", 50);
    }

    private void createOrdersTable(){
        String sql = "CREATE TABLE IF NOT EXISTS orders (" +
                "id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, " +
                "number VARCHAR(13) NOT NULL UNIQUE, " +
                "cost INT NOT NULL, " +
                "date DATE NOT NULL, " +
                "receiver VARCHAR(50) NOT NULL, " +
                "address VARCHAR(100) NOT NULL, " +
                "payment_type VARCHAR(20) NOT NULL, " +
                "delivery_type VARCHAR(20) NOT NULL" +
                ");";
       try {
           jdbcTemplate.execute(sql);
       } catch (Exception e) {
           e.printStackTrace();
       }
    }

    private void createOrderDetailsTable(){
        String sql = "CREATE TABLE IF NOT EXISTS order_details (" +
                "id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, " +
                "article INT NOT NULL, " +
                "title VARCHAR(50) NOT NULL, " +
                "amount INT NOT NULL, " +
                "price INT NOT NULL, " +
                "order_id BIGINT NOT NULL" +
                ");";

        jdbcTemplate.execute(sql);
    }

    private void createProductTable(){
        String sql = "CREATE TABLE IF NOT EXISTS products (" +
                "id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, " +
                "title VARCHAR(50) NOT NULL, " +
                "article INT NOT NULL UNIQUE, " +
                "price INT NOT NULL" +
                ");";

        jdbcTemplate.execute(sql);
    }
}
